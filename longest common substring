Problem Description
You have been given two strings 's1' and 's2'. You have to find the length of the longest common substring.
A string "str1" is a substring of another string “str2” if “str2” contains the same characters as in “str1”, in the same order and in continuous fashion also.

import java.util.*;

class LongestCommonSubstring{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t>0){
            String s1 = sc.next();
            String s2 = sc.next();
            System.out.println(longestCommonSubstring(s1,s2));
            t--;
        }
        sc.close();
    }

    static int longestCommonSubstring(String s1, String s2){
        int n = s1.length();
        int m= s2.length();
        int maxLength=0;
        int[][] dp = new int[n+1][m+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=m;j++){
                dp[i][j]=0;
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(s1.charAt(i-1)==s2.charAt(j-1)){
                    dp[i][j] = 1+ dp[i-1][j-1];
                }
                else{
                    dp[i][j]=0; // already zero actually
                }
                maxLength= Math.max(maxLength,dp[i][j]);
            }
        }
        return maxLength;
    }
}
